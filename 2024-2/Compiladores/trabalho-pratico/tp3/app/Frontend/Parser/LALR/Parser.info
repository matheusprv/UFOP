-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from app/Frontend/Parser/LALR/Parser.y
-----------------------------------------------------------------------------


-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> Prog                              (0)
	Prog -> Defs                                       (1)
	Defs -> Def Defs                                   (2)
	Defs ->                                            (3)
	Def -> "data" typeName "{" Decls "}"               (4)
	Def -> id "(" Params ")" ReturnType "{" Cmds "}"   (5)
	Decls -> Decl Decls                                (6)
	Decls ->                                           (7)
	Decl -> id "::" Type ";"                           (8)
	Params -> ParamList                                (9)
	Params ->                                          (10)
	ParamList -> Param "," ParamList                   (11)
	ParamList -> Param                                 (12)
	Param -> id "::" Type                              (13)
	ReturnType -> ":" Types                            (14)
	ReturnType ->                                      (15)
	Types -> Type "," TypeList                         (16)
	Types -> Type                                      (17)
	TypeList -> Type "," TypeList                      (18)
	TypeList -> Type                                   (19)
	Type -> BaseType "[" "]"                           (20)
	Type -> BaseType                                   (21)
	BaseType -> "Int"                                  (22)
	BaseType -> "Bool"                                 (23)
	BaseType -> "Char"                                 (24)
	BaseType -> "Float"                                (25)
	BaseType -> typeName                               (26)
	Cmds -> Cmd Cmds                                   (27)
	Cmds ->                                            (28)
	Cmd -> "{" Cmds "}"                                (29)
	Cmd -> LValue "=" Exp ";"                          (30)
	Cmd -> "if" "(" Exp ")" Cmd                        (31)
	Cmd -> "if" "(" Exp ")" Cmd "else" Cmd             (32)
	Cmd -> "print" Exp ";"                             (33)
	Cmd -> "read" LValue ";"                           (34)
	Cmd -> "iterate" "(" Exp ")" Cmd                   (35)
	Cmd -> "return" Exp ReturnList ";"                 (36)
	Cmd -> id "(" Exps ")" "<" LValues ">" ";"         (37)
	Cmd -> id "(" Exps ")" ";"                         (38)
	Cmd -> Decl                                        (39)
	Cmd -> id "::" Type "=" Exp ";"                    (40)
	ReturnList -> "," Exp ReturnList                   (41)
	ReturnList ->                                      (42)
	Exps -> Exp "," ExpList                            (43)
	Exps -> Exp                                        (44)
	Exps ->                                            (45)
	ExpList -> Exp "," ExpList                         (46)
	ExpList -> Exp                                     (47)
	LValues -> LValue "," LValueList                   (48)
	LValues -> LValue                                  (49)
	LValues ->                                         (50)
	LValueList -> LValue "," LValueList                (51)
	LValueList -> LValue                               (52)
	LValue -> id                                       (53)
	LValue -> id LValueLinha                           (54)
	LValueLinha -> "[" Exp "]"                         (55)
	LValueLinha -> "." id                              (56)
	LValueLinha -> "[" Exp "]" LValueLinha             (57)
	LValueLinha -> "." id LValueLinha                  (58)
	Exp -> Exp "&&" Exp                                (59)
	Exp -> Exp "==" Exp                                (60)
	Exp -> Exp "!=" Exp                                (61)
	Exp -> Exp "<" Exp                                 (62)
	Exp -> Exp ">" Exp                                 (63)
	Exp -> Exp "+" Exp                                 (64)
	Exp -> Exp "-" Exp                                 (65)
	Exp -> Exp "*" Exp                                 (66)
	Exp -> Exp "/" Exp                                 (67)
	Exp -> Exp "%" Exp                                 (68)
	Exp -> "!" Exp                                     (69)
	Exp -> "-" Exp                                     (70)
	Exp -> "true"                                      (71)
	Exp -> "false"                                     (72)
	Exp -> "null"                                      (73)
	Exp -> intNumber                                   (74)
	Exp -> floatNumber                                 (75)
	Exp -> character                                   (76)
	Exp -> "(" Exp ")"                                 (77)
	Exp -> id "(" Exps ")" "[" Exp "]"                 (78)
	Exp -> LValue                                      (79)
	Exp -> "new" BaseType "[" ExpList "]"              (80)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	id             { Token _ (TIdent $$) }
	typeName       { Token _ (TTypeName $$) }
	intNumber      { Token _ (TIntNumber $$) }
	floatNumber    { Token _ (TFloatNumber $$) }
	character      { Token _ (TCharacter $$) }
	"="            { Token _ TAssign }
	"read"         { Token _ TRead }
	"print"        { Token _ TPrint }
	"if"           { Token _ TIf }
	"else"         { Token _ TElse }
	"iterate"      { Token _ TIterate }
	";"            { Token _ TSemi }
	":"            { Token _ TColon }
	"::"           { Token _ TDoubleColon }
	"."            { Token _ TDot }
	","            { Token _ TComma }
	"("            { Token _ TLParen }
	")"            { Token _ TRParen }
	"{"            { Token _ TLBrace }
	"}"            { Token _ TRBrace }
	"["            { Token _ TLBracket }
	"]"            { Token _ TRBracket }
	"+"            { Token _ TPlus }
	"*"            { Token _ TTimes }
	"-"            { Token _ TMinus }
	"/"            { Token _ TDiv }
	"%"            { Token _ TMod }
	"=="           { Token _ TEq }
	"!="           { Token _ TNeq }
	"<"            { Token _ TLt }
	">"            { Token _ TGt }
	"!"            { Token _ TNot }
	"&&"           { Token _ TAnd }
	"Int"          { Token _ TTInt }
	"Float"        { Token _ TTFloat }
	"Char"         { Token _ TTChar }
	"Bool"         { Token _ TTBool }
	"true"         { Token _ TTrue }
	"false"        { Token _ TFalse }
	"null"         { Token _ TNull }
	"data"         { Token _ TData }
	"new"          { Token _ TNew }
	"return"       { Token _ TReturn }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	Prog            rule  1
	Defs            rules 2, 3
	Def             rules 4, 5
	Decls           rules 6, 7
	Decl            rule  8
	Params          rules 9, 10
	ParamList       rules 11, 12
	Param           rule  13
	ReturnType      rules 14, 15
	Types           rules 16, 17
	TypeList        rules 18, 19
	Type            rules 20, 21
	BaseType        rules 22, 23, 24, 25, 26
	Cmds            rules 27, 28
	Cmd             rules 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40
	ReturnList      rules 41, 42
	Exps            rules 43, 44, 45
	ExpList         rules 46, 47
	LValues         rules 48, 49, 50
	LValueList      rules 51, 52
	LValue          rules 53, 54
	LValueLinha     rules 55, 56, 57, 58
	Exp             rules 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parser -> . Prog                             (rule 0)

	id             shift, and enter state 4
	"data"         shift, and enter state 5
	%eof           reduce using rule 3

	Prog           goto state 6
	Defs           goto state 2
	Def            goto state 3

State 1

	Prog -> . Defs                                      (rule 1)

	id             shift, and enter state 4
	"data"         shift, and enter state 5

	Defs           goto state 2
	Def            goto state 3

State 2

	Prog -> Defs .                                      (rule 1)

	%eof           reduce using rule 1


State 3

	Defs -> Def . Defs                                  (rule 2)

	id             shift, and enter state 4
	"data"         shift, and enter state 5
	%eof           reduce using rule 3

	Defs           goto state 9
	Def            goto state 3

State 4

	Def -> id . "(" Params ")" ReturnType "{" Cmds "}"    (rule 5)

	"("            shift, and enter state 8


State 5

	Def -> "data" . typeName "{" Decls "}"              (rule 4)

	typeName       shift, and enter state 7


State 6

	%start_parser -> Prog .                             (rule 0)

	%eof           accept


State 7

	Def -> "data" typeName . "{" Decls "}"              (rule 4)

	"{"            shift, and enter state 14


State 8

	Def -> id "(" . Params ")" ReturnType "{" Cmds "}"    (rule 5)

	id             shift, and enter state 13
	")"            reduce using rule 10

	Params         goto state 10
	ParamList      goto state 11
	Param          goto state 12

State 9

	Defs -> Def Defs .                                  (rule 2)

	%eof           reduce using rule 2


State 10

	Def -> id "(" Params . ")" ReturnType "{" Cmds "}"    (rule 5)

	")"            shift, and enter state 20


State 11

	Params -> ParamList .                               (rule 9)

	")"            reduce using rule 9


State 12

	ParamList -> Param . "," ParamList                  (rule 11)
	ParamList -> Param .                                (rule 12)

	","            shift, and enter state 19
	")"            reduce using rule 12


State 13

	Param -> id . "::" Type                             (rule 13)

	"::"           shift, and enter state 18


State 14

	Def -> "data" typeName "{" . Decls "}"              (rule 4)

	id             shift, and enter state 17
	"}"            reduce using rule 7

	Decls          goto state 15
	Decl           goto state 16

State 15

	Def -> "data" typeName "{" Decls . "}"              (rule 4)

	"}"            shift, and enter state 33


State 16

	Decls -> Decl . Decls                               (rule 6)

	id             shift, and enter state 17
	"}"            reduce using rule 7

	Decls          goto state 32
	Decl           goto state 16

State 17

	Decl -> id . "::" Type ";"                          (rule 8)

	"::"           shift, and enter state 31


State 18

	Param -> id "::" . Type                             (rule 13)

	typeName       shift, and enter state 26
	"Int"          shift, and enter state 27
	"Float"        shift, and enter state 28
	"Char"         shift, and enter state 29
	"Bool"         shift, and enter state 30

	Type           goto state 24
	BaseType       goto state 25

State 19

	ParamList -> Param "," . ParamList                  (rule 11)

	id             shift, and enter state 13

	ParamList      goto state 23
	Param          goto state 12

State 20

	Def -> id "(" Params ")" . ReturnType "{" Cmds "}"    (rule 5)

	":"            shift, and enter state 22
	"{"            reduce using rule 15

	ReturnType     goto state 21

State 21

	Def -> id "(" Params ")" ReturnType . "{" Cmds "}"    (rule 5)

	"{"            shift, and enter state 38


State 22

	ReturnType -> ":" . Types                           (rule 14)

	typeName       shift, and enter state 26
	"Int"          shift, and enter state 27
	"Float"        shift, and enter state 28
	"Char"         shift, and enter state 29
	"Bool"         shift, and enter state 30

	Types          goto state 36
	Type           goto state 37
	BaseType       goto state 25

State 23

	ParamList -> Param "," ParamList .                  (rule 11)

	")"            reduce using rule 11


State 24

	Param -> id "::" Type .                             (rule 13)

	","            reduce using rule 13
	")"            reduce using rule 13


State 25

	Type -> BaseType . "[" "]"                          (rule 20)
	Type -> BaseType .                                  (rule 21)

	"="            reduce using rule 21
	";"            reduce using rule 21
	","            reduce using rule 21
	")"            reduce using rule 21
	"{"            reduce using rule 21
	"["            shift, and enter state 35


State 26

	BaseType -> typeName .                              (rule 26)

	"="            reduce using rule 26
	";"            reduce using rule 26
	","            reduce using rule 26
	")"            reduce using rule 26
	"{"            reduce using rule 26
	"["            reduce using rule 26


State 27

	BaseType -> "Int" .                                 (rule 22)

	"="            reduce using rule 22
	";"            reduce using rule 22
	","            reduce using rule 22
	")"            reduce using rule 22
	"{"            reduce using rule 22
	"["            reduce using rule 22


State 28

	BaseType -> "Float" .                               (rule 25)

	"="            reduce using rule 25
	";"            reduce using rule 25
	","            reduce using rule 25
	")"            reduce using rule 25
	"{"            reduce using rule 25
	"["            reduce using rule 25


State 29

	BaseType -> "Char" .                                (rule 24)

	"="            reduce using rule 24
	";"            reduce using rule 24
	","            reduce using rule 24
	")"            reduce using rule 24
	"{"            reduce using rule 24
	"["            reduce using rule 24


State 30

	BaseType -> "Bool" .                                (rule 23)

	"="            reduce using rule 23
	";"            reduce using rule 23
	","            reduce using rule 23
	")"            reduce using rule 23
	"{"            reduce using rule 23
	"["            reduce using rule 23


State 31

	Decl -> id "::" . Type ";"                          (rule 8)

	typeName       shift, and enter state 26
	"Int"          shift, and enter state 27
	"Float"        shift, and enter state 28
	"Char"         shift, and enter state 29
	"Bool"         shift, and enter state 30

	Type           goto state 34
	BaseType       goto state 25

State 32

	Decls -> Decl Decls .                               (rule 6)

	"}"            reduce using rule 6


State 33

	Def -> "data" typeName "{" Decls "}" .              (rule 4)

	id             reduce using rule 4
	"data"         reduce using rule 4
	%eof           reduce using rule 4


State 34

	Decl -> id "::" Type . ";"                          (rule 8)

	";"            shift, and enter state 52


State 35

	Type -> BaseType "[" . "]"                          (rule 20)

	"]"            shift, and enter state 51


State 36

	ReturnType -> ":" Types .                           (rule 14)

	"{"            reduce using rule 14


State 37

	Types -> Type . "," TypeList                        (rule 16)
	Types -> Type .                                     (rule 17)

	","            shift, and enter state 50
	"{"            reduce using rule 17


State 38

	Def -> id "(" Params ")" ReturnType "{" . Cmds "}"    (rule 5)

	id             shift, and enter state 43
	"read"         shift, and enter state 44
	"print"        shift, and enter state 45
	"if"           shift, and enter state 46
	"iterate"      shift, and enter state 47
	"{"            shift, and enter state 48
	"}"            reduce using rule 28
	"return"       shift, and enter state 49

	Decl           goto state 39
	Cmds           goto state 40
	Cmd            goto state 41
	LValue         goto state 42

State 39

	Cmd -> Decl .                                       (rule 39)

	id             reduce using rule 39
	"read"         reduce using rule 39
	"print"        reduce using rule 39
	"if"           reduce using rule 39
	"else"         reduce using rule 39
	"iterate"      reduce using rule 39
	"{"            reduce using rule 39
	"}"            reduce using rule 39
	"return"       reduce using rule 39


State 40

	Def -> id "(" Params ")" ReturnType "{" Cmds . "}"    (rule 5)

	"}"            shift, and enter state 81


State 41

	Cmds -> Cmd . Cmds                                  (rule 27)

	id             shift, and enter state 43
	"read"         shift, and enter state 44
	"print"        shift, and enter state 45
	"if"           shift, and enter state 46
	"iterate"      shift, and enter state 47
	"{"            shift, and enter state 48
	"}"            reduce using rule 28
	"return"       shift, and enter state 49

	Decl           goto state 39
	Cmds           goto state 80
	Cmd            goto state 41
	LValue         goto state 42

State 42

	Cmd -> LValue . "=" Exp ";"                         (rule 30)

	"="            shift, and enter state 79


State 43

	Decl -> id . "::" Type ";"                          (rule 8)
	Cmd -> id . "(" Exps ")" "<" LValues ">" ";"        (rule 37)
	Cmd -> id . "(" Exps ")" ";"                        (rule 38)
	Cmd -> id . "::" Type "=" Exp ";"                   (rule 40)
	LValue -> id .                                      (rule 53)
	LValue -> id . LValueLinha                          (rule 54)

	"="            reduce using rule 53
	"::"           shift, and enter state 75
	"."            shift, and enter state 76
	"("            shift, and enter state 77
	"["            shift, and enter state 78

	LValueLinha    goto state 74

State 44

	Cmd -> "read" . LValue ";"                          (rule 34)

	id             shift, and enter state 73

	LValue         goto state 72

State 45

	Cmd -> "print" . Exp ";"                            (rule 33)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 71

State 46

	Cmd -> "if" . "(" Exp ")" Cmd                       (rule 31)
	Cmd -> "if" . "(" Exp ")" Cmd "else" Cmd            (rule 32)

	"("            shift, and enter state 70


State 47

	Cmd -> "iterate" . "(" Exp ")" Cmd                  (rule 35)

	"("            shift, and enter state 69


State 48

	Cmd -> "{" . Cmds "}"                               (rule 29)

	id             shift, and enter state 43
	"read"         shift, and enter state 44
	"print"        shift, and enter state 45
	"if"           shift, and enter state 46
	"iterate"      shift, and enter state 47
	"{"            shift, and enter state 48
	"}"            reduce using rule 28
	"return"       shift, and enter state 49

	Decl           goto state 39
	Cmds           goto state 68
	Cmd            goto state 41
	LValue         goto state 42

State 49

	Cmd -> "return" . Exp ReturnList ";"                (rule 36)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 56

State 50

	Types -> Type "," . TypeList                        (rule 16)

	typeName       shift, and enter state 26
	"Int"          shift, and enter state 27
	"Float"        shift, and enter state 28
	"Char"         shift, and enter state 29
	"Bool"         shift, and enter state 30

	TypeList       goto state 53
	Type           goto state 54
	BaseType       goto state 25

State 51

	Type -> BaseType "[" "]" .                          (rule 20)

	"="            reduce using rule 20
	";"            reduce using rule 20
	","            reduce using rule 20
	")"            reduce using rule 20
	"{"            reduce using rule 20


State 52

	Decl -> id "::" Type ";" .                          (rule 8)

	id             reduce using rule 8
	"read"         reduce using rule 8
	"print"        reduce using rule 8
	"if"           reduce using rule 8
	"else"         reduce using rule 8
	"iterate"      reduce using rule 8
	"{"            reduce using rule 8
	"}"            reduce using rule 8
	"return"       reduce using rule 8


State 53

	Types -> Type "," TypeList .                        (rule 16)

	"{"            reduce using rule 16


State 54

	TypeList -> Type . "," TypeList                     (rule 18)
	TypeList -> Type .                                  (rule 19)

	","            shift, and enter state 110
	"{"            reduce using rule 19


State 55

	Exp -> LValue .                                     (rule 79)

	";"            reduce using rule 79
	","            reduce using rule 79
	")"            reduce using rule 79
	"]"            reduce using rule 79
	"+"            reduce using rule 79
	"*"            reduce using rule 79
	"-"            reduce using rule 79
	"/"            reduce using rule 79
	"%"            reduce using rule 79
	"=="           reduce using rule 79
	"!="           reduce using rule 79
	"<"            reduce using rule 79
	">"            reduce using rule 79
	"&&"           reduce using rule 79


State 56

	Cmd -> "return" Exp . ReturnList ";"                (rule 36)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 42
	","            shift, and enter state 109
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99

	ReturnList     goto state 108

State 57

	LValue -> id .                                      (rule 53)
	LValue -> id . LValueLinha                          (rule 54)
	Exp -> id . "(" Exps ")" "[" Exp "]"                (rule 78)

	";"            reduce using rule 53
	"."            shift, and enter state 76
	","            reduce using rule 53
	"("            shift, and enter state 107
	")"            reduce using rule 53
	"["            shift, and enter state 78
	"]"            reduce using rule 53
	"+"            reduce using rule 53
	"*"            reduce using rule 53
	"-"            reduce using rule 53
	"/"            reduce using rule 53
	"%"            reduce using rule 53
	"=="           reduce using rule 53
	"!="           reduce using rule 53
	"<"            reduce using rule 53
	">"            reduce using rule 53
	"&&"           reduce using rule 53

	LValueLinha    goto state 74

State 58

	Exp -> intNumber .                                  (rule 74)

	";"            reduce using rule 74
	","            reduce using rule 74
	")"            reduce using rule 74
	"]"            reduce using rule 74
	"+"            reduce using rule 74
	"*"            reduce using rule 74
	"-"            reduce using rule 74
	"/"            reduce using rule 74
	"%"            reduce using rule 74
	"=="           reduce using rule 74
	"!="           reduce using rule 74
	"<"            reduce using rule 74
	">"            reduce using rule 74
	"&&"           reduce using rule 74


State 59

	Exp -> floatNumber .                                (rule 75)

	";"            reduce using rule 75
	","            reduce using rule 75
	")"            reduce using rule 75
	"]"            reduce using rule 75
	"+"            reduce using rule 75
	"*"            reduce using rule 75
	"-"            reduce using rule 75
	"/"            reduce using rule 75
	"%"            reduce using rule 75
	"=="           reduce using rule 75
	"!="           reduce using rule 75
	"<"            reduce using rule 75
	">"            reduce using rule 75
	"&&"           reduce using rule 75


State 60

	Exp -> character .                                  (rule 76)

	";"            reduce using rule 76
	","            reduce using rule 76
	")"            reduce using rule 76
	"]"            reduce using rule 76
	"+"            reduce using rule 76
	"*"            reduce using rule 76
	"-"            reduce using rule 76
	"/"            reduce using rule 76
	"%"            reduce using rule 76
	"=="           reduce using rule 76
	"!="           reduce using rule 76
	"<"            reduce using rule 76
	">"            reduce using rule 76
	"&&"           reduce using rule 76


State 61

	Exp -> "(" . Exp ")"                                (rule 77)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 106

State 62

	Exp -> "-" . Exp                                    (rule 70)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 105

State 63

	Exp -> "!" . Exp                                    (rule 69)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 104

State 64

	Exp -> "true" .                                     (rule 71)

	";"            reduce using rule 71
	","            reduce using rule 71
	")"            reduce using rule 71
	"]"            reduce using rule 71
	"+"            reduce using rule 71
	"*"            reduce using rule 71
	"-"            reduce using rule 71
	"/"            reduce using rule 71
	"%"            reduce using rule 71
	"=="           reduce using rule 71
	"!="           reduce using rule 71
	"<"            reduce using rule 71
	">"            reduce using rule 71
	"&&"           reduce using rule 71


State 65

	Exp -> "false" .                                    (rule 72)

	";"            reduce using rule 72
	","            reduce using rule 72
	")"            reduce using rule 72
	"]"            reduce using rule 72
	"+"            reduce using rule 72
	"*"            reduce using rule 72
	"-"            reduce using rule 72
	"/"            reduce using rule 72
	"%"            reduce using rule 72
	"=="           reduce using rule 72
	"!="           reduce using rule 72
	"<"            reduce using rule 72
	">"            reduce using rule 72
	"&&"           reduce using rule 72


State 66

	Exp -> "null" .                                     (rule 73)

	";"            reduce using rule 73
	","            reduce using rule 73
	")"            reduce using rule 73
	"]"            reduce using rule 73
	"+"            reduce using rule 73
	"*"            reduce using rule 73
	"-"            reduce using rule 73
	"/"            reduce using rule 73
	"%"            reduce using rule 73
	"=="           reduce using rule 73
	"!="           reduce using rule 73
	"<"            reduce using rule 73
	">"            reduce using rule 73
	"&&"           reduce using rule 73


State 67

	Exp -> "new" . BaseType "[" ExpList "]"             (rule 80)

	typeName       shift, and enter state 26
	"Int"          shift, and enter state 27
	"Float"        shift, and enter state 28
	"Char"         shift, and enter state 29
	"Bool"         shift, and enter state 30

	BaseType       goto state 103

State 68

	Cmd -> "{" Cmds . "}"                               (rule 29)

	"}"            shift, and enter state 102


State 69

	Cmd -> "iterate" "(" . Exp ")" Cmd                  (rule 35)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 101

State 70

	Cmd -> "if" "(" . Exp ")" Cmd                       (rule 31)
	Cmd -> "if" "(" . Exp ")" Cmd "else" Cmd            (rule 32)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 100

State 71

	Cmd -> "print" Exp . ";"                            (rule 33)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            shift, and enter state 89
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 72

	Cmd -> "read" LValue . ";"                          (rule 34)

	";"            shift, and enter state 88


State 73

	LValue -> id .                                      (rule 53)
	LValue -> id . LValueLinha                          (rule 54)

	";"            reduce using rule 53
	"."            shift, and enter state 76
	","            reduce using rule 53
	"["            shift, and enter state 78
	">"            reduce using rule 53

	LValueLinha    goto state 74

State 74

	LValue -> id LValueLinha .                          (rule 54)

	"="            reduce using rule 54
	";"            reduce using rule 54
	","            reduce using rule 54
	")"            reduce using rule 54
	"]"            reduce using rule 54
	"+"            reduce using rule 54
	"*"            reduce using rule 54
	"-"            reduce using rule 54
	"/"            reduce using rule 54
	"%"            reduce using rule 54
	"=="           reduce using rule 54
	"!="           reduce using rule 54
	"<"            reduce using rule 54
	">"            reduce using rule 54
	"&&"           reduce using rule 54


State 75

	Decl -> id "::" . Type ";"                          (rule 8)
	Cmd -> id "::" . Type "=" Exp ";"                   (rule 40)

	typeName       shift, and enter state 26
	"Int"          shift, and enter state 27
	"Float"        shift, and enter state 28
	"Char"         shift, and enter state 29
	"Bool"         shift, and enter state 30

	Type           goto state 87
	BaseType       goto state 25

State 76

	LValueLinha -> "." . id                             (rule 56)
	LValueLinha -> "." . id LValueLinha                 (rule 58)

	id             shift, and enter state 86


State 77

	Cmd -> id "(" . Exps ")" "<" LValues ">" ";"        (rule 37)
	Cmd -> id "(" . Exps ")" ";"                        (rule 38)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	")"            reduce using rule 45
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	Exps           goto state 84
	LValue         goto state 55
	Exp            goto state 85

State 78

	LValueLinha -> "[" . Exp "]"                        (rule 55)
	LValueLinha -> "[" . Exp "]" LValueLinha            (rule 57)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 83

State 79

	Cmd -> LValue "=" . Exp ";"                         (rule 30)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 82

State 80

	Cmds -> Cmd Cmds .                                  (rule 27)

	"}"            reduce using rule 27


State 81

	Def -> id "(" Params ")" ReturnType "{" Cmds "}" .    (rule 5)

	id             reduce using rule 5
	"data"         reduce using rule 5
	%eof           reduce using rule 5


State 82

	Cmd -> LValue "=" Exp . ";"                         (rule 30)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            shift, and enter state 134
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 83

	LValueLinha -> "[" Exp . "]"                        (rule 55)
	LValueLinha -> "[" Exp . "]" LValueLinha            (rule 57)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	"]"            shift, and enter state 133
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 84

	Cmd -> id "(" Exps . ")" "<" LValues ">" ";"        (rule 37)
	Cmd -> id "(" Exps . ")" ";"                        (rule 38)

	")"            shift, and enter state 132


State 85

	Exps -> Exp . "," ExpList                           (rule 43)
	Exps -> Exp .                                       (rule 44)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	","            shift, and enter state 131
	")"            reduce using rule 44
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 86

	LValueLinha -> "." id .                             (rule 56)
	LValueLinha -> "." id . LValueLinha                 (rule 58)

	"="            reduce using rule 56
	";"            reduce using rule 56
	"."            shift, and enter state 76
	","            reduce using rule 56
	")"            reduce using rule 56
	"["            shift, and enter state 78
	"]"            reduce using rule 56
	"+"            reduce using rule 56
	"*"            reduce using rule 56
	"-"            reduce using rule 56
	"/"            reduce using rule 56
	"%"            reduce using rule 56
	"=="           reduce using rule 56
	"!="           reduce using rule 56
	"<"            reduce using rule 56
	">"            reduce using rule 56
	"&&"           reduce using rule 56

	LValueLinha    goto state 130

State 87

	Decl -> id "::" Type . ";"                          (rule 8)
	Cmd -> id "::" Type . "=" Exp ";"                   (rule 40)

	"="            shift, and enter state 129
	";"            shift, and enter state 52


State 88

	Cmd -> "read" LValue ";" .                          (rule 34)

	id             reduce using rule 34
	"read"         reduce using rule 34
	"print"        reduce using rule 34
	"if"           reduce using rule 34
	"else"         reduce using rule 34
	"iterate"      reduce using rule 34
	"{"            reduce using rule 34
	"}"            reduce using rule 34
	"return"       reduce using rule 34


State 89

	Cmd -> "print" Exp ";" .                            (rule 33)

	id             reduce using rule 33
	"read"         reduce using rule 33
	"print"        reduce using rule 33
	"if"           reduce using rule 33
	"else"         reduce using rule 33
	"iterate"      reduce using rule 33
	"{"            reduce using rule 33
	"}"            reduce using rule 33
	"return"       reduce using rule 33


State 90

	Exp -> Exp "+" . Exp                                (rule 64)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 128

State 91

	Exp -> Exp "*" . Exp                                (rule 66)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 127

State 92

	Exp -> Exp "-" . Exp                                (rule 65)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 126

State 93

	Exp -> Exp "/" . Exp                                (rule 67)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 125

State 94

	Exp -> Exp "%" . Exp                                (rule 68)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 124

State 95

	Exp -> Exp "==" . Exp                               (rule 60)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 123

State 96

	Exp -> Exp "!=" . Exp                               (rule 61)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 122

State 97

	Exp -> Exp "<" . Exp                                (rule 62)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 121

State 98

	Exp -> Exp ">" . Exp                                (rule 63)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 120

State 99

	Exp -> Exp "&&" . Exp                               (rule 59)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 119

State 100

	Cmd -> "if" "(" Exp . ")" Cmd                       (rule 31)
	Cmd -> "if" "(" Exp . ")" Cmd "else" Cmd            (rule 32)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	")"            shift, and enter state 118
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 101

	Cmd -> "iterate" "(" Exp . ")" Cmd                  (rule 35)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	")"            shift, and enter state 117
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 102

	Cmd -> "{" Cmds "}" .                               (rule 29)

	id             reduce using rule 29
	"read"         reduce using rule 29
	"print"        reduce using rule 29
	"if"           reduce using rule 29
	"else"         reduce using rule 29
	"iterate"      reduce using rule 29
	"{"            reduce using rule 29
	"}"            reduce using rule 29
	"return"       reduce using rule 29


State 103

	Exp -> "new" BaseType . "[" ExpList "]"             (rule 80)

	"["            shift, and enter state 116


State 104

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)
	Exp -> "!" Exp .                                    (rule 69)

	";"            reduce using rule 69
	","            reduce using rule 69
	")"            reduce using rule 69
	"]"            reduce using rule 69
	"+"            reduce using rule 69
	"*"            reduce using rule 69
	"-"            reduce using rule 69
	"/"            reduce using rule 69
	"%"            reduce using rule 69
	"=="           reduce using rule 69
	"!="           reduce using rule 69
	"<"            reduce using rule 69
	">"            reduce using rule 69
	"&&"           reduce using rule 69


State 105

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)
	Exp -> "-" Exp .                                    (rule 70)

	";"            reduce using rule 70
	","            reduce using rule 70
	")"            reduce using rule 70
	"]"            reduce using rule 70
	"+"            reduce using rule 70
	"*"            shift, and enter state 91
	"-"            reduce using rule 70
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           reduce using rule 70
	"!="           reduce using rule 70
	"<"            reduce using rule 70
	">"            reduce using rule 70
	"&&"           reduce using rule 70


State 106

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)
	Exp -> "(" Exp . ")"                                (rule 77)

	")"            shift, and enter state 115
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 107

	Exp -> id "(" . Exps ")" "[" Exp "]"                (rule 78)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	")"            reduce using rule 45
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	Exps           goto state 114
	LValue         goto state 55
	Exp            goto state 85

State 108

	Cmd -> "return" Exp ReturnList . ";"                (rule 36)

	";"            shift, and enter state 113


State 109

	ReturnList -> "," . Exp ReturnList                  (rule 41)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 112

State 110

	TypeList -> Type "," . TypeList                     (rule 18)

	typeName       shift, and enter state 26
	"Int"          shift, and enter state 27
	"Float"        shift, and enter state 28
	"Char"         shift, and enter state 29
	"Bool"         shift, and enter state 30

	TypeList       goto state 111
	Type           goto state 54
	BaseType       goto state 25

State 111

	TypeList -> Type "," TypeList .                     (rule 18)

	"{"            reduce using rule 18


State 112

	ReturnList -> "," Exp . ReturnList                  (rule 41)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 42
	","            shift, and enter state 109
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99

	ReturnList     goto state 145

State 113

	Cmd -> "return" Exp ReturnList ";" .                (rule 36)

	id             reduce using rule 36
	"read"         reduce using rule 36
	"print"        reduce using rule 36
	"if"           reduce using rule 36
	"else"         reduce using rule 36
	"iterate"      reduce using rule 36
	"{"            reduce using rule 36
	"}"            reduce using rule 36
	"return"       reduce using rule 36


State 114

	Exp -> id "(" Exps . ")" "[" Exp "]"                (rule 78)

	")"            shift, and enter state 144


State 115

	Exp -> "(" Exp ")" .                                (rule 77)

	";"            reduce using rule 77
	","            reduce using rule 77
	")"            reduce using rule 77
	"]"            reduce using rule 77
	"+"            reduce using rule 77
	"*"            reduce using rule 77
	"-"            reduce using rule 77
	"/"            reduce using rule 77
	"%"            reduce using rule 77
	"=="           reduce using rule 77
	"!="           reduce using rule 77
	"<"            reduce using rule 77
	">"            reduce using rule 77
	"&&"           reduce using rule 77


State 116

	Exp -> "new" BaseType "[" . ExpList "]"             (rule 80)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	ExpList        goto state 143
	LValue         goto state 55
	Exp            goto state 139

State 117

	Cmd -> "iterate" "(" Exp ")" . Cmd                  (rule 35)

	id             shift, and enter state 43
	"read"         shift, and enter state 44
	"print"        shift, and enter state 45
	"if"           shift, and enter state 46
	"iterate"      shift, and enter state 47
	"{"            shift, and enter state 48
	"return"       shift, and enter state 49

	Decl           goto state 39
	Cmd            goto state 142
	LValue         goto state 42

State 118

	Cmd -> "if" "(" Exp ")" . Cmd                       (rule 31)
	Cmd -> "if" "(" Exp ")" . Cmd "else" Cmd            (rule 32)

	id             shift, and enter state 43
	"read"         shift, and enter state 44
	"print"        shift, and enter state 45
	"if"           shift, and enter state 46
	"iterate"      shift, and enter state 47
	"{"            shift, and enter state 48
	"return"       shift, and enter state 49

	Decl           goto state 39
	Cmd            goto state 141
	LValue         goto state 42

State 119

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp "&&" Exp .                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 59
	","            reduce using rule 59
	")"            reduce using rule 59
	"]"            reduce using rule 59
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           reduce using rule 59


State 120

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp ">" Exp .                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 63
	","            reduce using rule 63
	")"            reduce using rule 63
	"]"            reduce using rule 63
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           reduce using rule 63
	"!="           reduce using rule 63
	"<"            fail
	">"            fail
	"&&"           reduce using rule 63


State 121

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp "<" Exp .                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 62
	","            reduce using rule 62
	")"            reduce using rule 62
	"]"            reduce using rule 62
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           reduce using rule 62
	"!="           reduce using rule 62
	"<"            fail
	">"            fail
	"&&"           reduce using rule 62


State 122

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp "!=" Exp .                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 61
	","            reduce using rule 61
	")"            reduce using rule 61
	"]"            reduce using rule 61
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           reduce using rule 61
	"!="           reduce using rule 61
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           reduce using rule 61


State 123

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp "==" Exp .                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 60
	","            reduce using rule 60
	")"            reduce using rule 60
	"]"            reduce using rule 60
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           reduce using rule 60
	"!="           reduce using rule 60
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           reduce using rule 60


State 124

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)
	Exp -> Exp "%" Exp .                                (rule 68)

	";"            reduce using rule 68
	","            reduce using rule 68
	")"            reduce using rule 68
	"]"            reduce using rule 68
	"+"            reduce using rule 68
	"*"            reduce using rule 68
	"-"            reduce using rule 68
	"/"            reduce using rule 68
	"%"            reduce using rule 68
	"=="           reduce using rule 68
	"!="           reduce using rule 68
	"<"            reduce using rule 68
	">"            reduce using rule 68
	"&&"           reduce using rule 68


State 125

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp "/" Exp .                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 67
	","            reduce using rule 67
	")"            reduce using rule 67
	"]"            reduce using rule 67
	"+"            reduce using rule 67
	"*"            reduce using rule 67
	"-"            reduce using rule 67
	"/"            reduce using rule 67
	"%"            reduce using rule 67
	"=="           reduce using rule 67
	"!="           reduce using rule 67
	"<"            reduce using rule 67
	">"            reduce using rule 67
	"&&"           reduce using rule 67


State 126

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp "-" Exp .                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 65
	","            reduce using rule 65
	")"            reduce using rule 65
	"]"            reduce using rule 65
	"+"            reduce using rule 65
	"*"            shift, and enter state 91
	"-"            reduce using rule 65
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           reduce using rule 65
	"!="           reduce using rule 65
	"<"            reduce using rule 65
	">"            reduce using rule 65
	"&&"           reduce using rule 65


State 127

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp "*" Exp .                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 66
	","            reduce using rule 66
	")"            reduce using rule 66
	"]"            reduce using rule 66
	"+"            reduce using rule 66
	"*"            reduce using rule 66
	"-"            reduce using rule 66
	"/"            reduce using rule 66
	"%"            reduce using rule 66
	"=="           reduce using rule 66
	"!="           reduce using rule 66
	"<"            reduce using rule 66
	">"            reduce using rule 66
	"&&"           reduce using rule 66


State 128

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp "+" Exp .                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            reduce using rule 64
	","            reduce using rule 64
	")"            reduce using rule 64
	"]"            reduce using rule 64
	"+"            reduce using rule 64
	"*"            shift, and enter state 91
	"-"            reduce using rule 64
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           reduce using rule 64
	"!="           reduce using rule 64
	"<"            reduce using rule 64
	">"            reduce using rule 64
	"&&"           reduce using rule 64


State 129

	Cmd -> id "::" Type "=" . Exp ";"                   (rule 40)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 140

State 130

	LValueLinha -> "." id LValueLinha .                 (rule 58)

	"="            reduce using rule 58
	";"            reduce using rule 58
	","            reduce using rule 58
	")"            reduce using rule 58
	"]"            reduce using rule 58
	"+"            reduce using rule 58
	"*"            reduce using rule 58
	"-"            reduce using rule 58
	"/"            reduce using rule 58
	"%"            reduce using rule 58
	"=="           reduce using rule 58
	"!="           reduce using rule 58
	"<"            reduce using rule 58
	">"            reduce using rule 58
	"&&"           reduce using rule 58


State 131

	Exps -> Exp "," . ExpList                           (rule 43)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	ExpList        goto state 138
	LValue         goto state 55
	Exp            goto state 139

State 132

	Cmd -> id "(" Exps ")" . "<" LValues ">" ";"        (rule 37)
	Cmd -> id "(" Exps ")" . ";"                        (rule 38)

	";"            shift, and enter state 136
	"<"            shift, and enter state 137


State 133

	LValueLinha -> "[" Exp "]" .                        (rule 55)
	LValueLinha -> "[" Exp "]" . LValueLinha            (rule 57)

	"="            reduce using rule 55
	";"            reduce using rule 55
	"."            shift, and enter state 76
	","            reduce using rule 55
	")"            reduce using rule 55
	"["            shift, and enter state 78
	"]"            reduce using rule 55
	"+"            reduce using rule 55
	"*"            reduce using rule 55
	"-"            reduce using rule 55
	"/"            reduce using rule 55
	"%"            reduce using rule 55
	"=="           reduce using rule 55
	"!="           reduce using rule 55
	"<"            reduce using rule 55
	">"            reduce using rule 55
	"&&"           reduce using rule 55

	LValueLinha    goto state 135

State 134

	Cmd -> LValue "=" Exp ";" .                         (rule 30)

	id             reduce using rule 30
	"read"         reduce using rule 30
	"print"        reduce using rule 30
	"if"           reduce using rule 30
	"else"         reduce using rule 30
	"iterate"      reduce using rule 30
	"{"            reduce using rule 30
	"}"            reduce using rule 30
	"return"       reduce using rule 30


State 135

	LValueLinha -> "[" Exp "]" LValueLinha .            (rule 57)

	"="            reduce using rule 57
	";"            reduce using rule 57
	","            reduce using rule 57
	")"            reduce using rule 57
	"]"            reduce using rule 57
	"+"            reduce using rule 57
	"*"            reduce using rule 57
	"-"            reduce using rule 57
	"/"            reduce using rule 57
	"%"            reduce using rule 57
	"=="           reduce using rule 57
	"!="           reduce using rule 57
	"<"            reduce using rule 57
	">"            reduce using rule 57
	"&&"           reduce using rule 57


State 136

	Cmd -> id "(" Exps ")" ";" .                        (rule 38)

	id             reduce using rule 38
	"read"         reduce using rule 38
	"print"        reduce using rule 38
	"if"           reduce using rule 38
	"else"         reduce using rule 38
	"iterate"      reduce using rule 38
	"{"            reduce using rule 38
	"}"            reduce using rule 38
	"return"       reduce using rule 38


State 137

	Cmd -> id "(" Exps ")" "<" . LValues ">" ";"        (rule 37)

	id             shift, and enter state 73
	">"            reduce using rule 50

	LValues        goto state 151
	LValue         goto state 152

State 138

	Exps -> Exp "," ExpList .                           (rule 43)

	")"            reduce using rule 43


State 139

	ExpList -> Exp . "," ExpList                        (rule 46)
	ExpList -> Exp .                                    (rule 47)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	","            shift, and enter state 150
	")"            reduce using rule 47
	"]"            reduce using rule 47
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 140

	Cmd -> id "::" Type "=" Exp . ";"                   (rule 40)
	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)

	";"            shift, and enter state 149
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 141

	Cmd -> "if" "(" Exp ")" Cmd .                       (rule 31)
	Cmd -> "if" "(" Exp ")" Cmd . "else" Cmd            (rule 32)

	id             reduce using rule 31
	"read"         reduce using rule 31
	"print"        reduce using rule 31
	"if"           reduce using rule 31
	"else"         shift, and enter state 148
	"iterate"      reduce using rule 31
	"{"            reduce using rule 31
	"}"            reduce using rule 31
	"return"       reduce using rule 31


State 142

	Cmd -> "iterate" "(" Exp ")" Cmd .                  (rule 35)

	id             reduce using rule 35
	"read"         reduce using rule 35
	"print"        reduce using rule 35
	"if"           reduce using rule 35
	"else"         reduce using rule 35
	"iterate"      reduce using rule 35
	"{"            reduce using rule 35
	"}"            reduce using rule 35
	"return"       reduce using rule 35


State 143

	Exp -> "new" BaseType "[" ExpList . "]"             (rule 80)

	"]"            shift, and enter state 147


State 144

	Exp -> id "(" Exps ")" . "[" Exp "]"                (rule 78)

	"["            shift, and enter state 146


State 145

	ReturnList -> "," Exp ReturnList .                  (rule 41)

	";"            reduce using rule 41


State 146

	Exp -> id "(" Exps ")" "[" . Exp "]"                (rule 78)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	LValue         goto state 55
	Exp            goto state 157

State 147

	Exp -> "new" BaseType "[" ExpList "]" .             (rule 80)

	";"            reduce using rule 80
	","            reduce using rule 80
	")"            reduce using rule 80
	"]"            reduce using rule 80
	"+"            reduce using rule 80
	"*"            reduce using rule 80
	"-"            reduce using rule 80
	"/"            reduce using rule 80
	"%"            reduce using rule 80
	"=="           reduce using rule 80
	"!="           reduce using rule 80
	"<"            reduce using rule 80
	">"            reduce using rule 80
	"&&"           reduce using rule 80


State 148

	Cmd -> "if" "(" Exp ")" Cmd "else" . Cmd            (rule 32)

	id             shift, and enter state 43
	"read"         shift, and enter state 44
	"print"        shift, and enter state 45
	"if"           shift, and enter state 46
	"iterate"      shift, and enter state 47
	"{"            shift, and enter state 48
	"return"       shift, and enter state 49

	Decl           goto state 39
	Cmd            goto state 156
	LValue         goto state 42

State 149

	Cmd -> id "::" Type "=" Exp ";" .                   (rule 40)

	id             reduce using rule 40
	"read"         reduce using rule 40
	"print"        reduce using rule 40
	"if"           reduce using rule 40
	"else"         reduce using rule 40
	"iterate"      reduce using rule 40
	"{"            reduce using rule 40
	"}"            reduce using rule 40
	"return"       reduce using rule 40


State 150

	ExpList -> Exp "," . ExpList                        (rule 46)

	id             shift, and enter state 57
	intNumber      shift, and enter state 58
	floatNumber    shift, and enter state 59
	character      shift, and enter state 60
	"("            shift, and enter state 61
	"-"            shift, and enter state 62
	"!"            shift, and enter state 63
	"true"         shift, and enter state 64
	"false"        shift, and enter state 65
	"null"         shift, and enter state 66
	"new"          shift, and enter state 67

	ExpList        goto state 155
	LValue         goto state 55
	Exp            goto state 139

State 151

	Cmd -> id "(" Exps ")" "<" LValues . ">" ";"        (rule 37)

	">"            shift, and enter state 154


State 152

	LValues -> LValue . "," LValueList                  (rule 48)
	LValues -> LValue .                                 (rule 49)

	","            shift, and enter state 153
	">"            reduce using rule 49


State 153

	LValues -> LValue "," . LValueList                  (rule 48)

	id             shift, and enter state 73

	LValueList     goto state 160
	LValue         goto state 161

State 154

	Cmd -> id "(" Exps ")" "<" LValues ">" . ";"        (rule 37)

	";"            shift, and enter state 159


State 155

	ExpList -> Exp "," ExpList .                        (rule 46)

	")"            reduce using rule 46
	"]"            reduce using rule 46


State 156

	Cmd -> "if" "(" Exp ")" Cmd "else" Cmd .            (rule 32)

	id             reduce using rule 32
	"read"         reduce using rule 32
	"print"        reduce using rule 32
	"if"           reduce using rule 32
	"else"         reduce using rule 32
	"iterate"      reduce using rule 32
	"{"            reduce using rule 32
	"}"            reduce using rule 32
	"return"       reduce using rule 32


State 157

	Exp -> Exp . "&&" Exp                               (rule 59)
	Exp -> Exp . "==" Exp                               (rule 60)
	Exp -> Exp . "!=" Exp                               (rule 61)
	Exp -> Exp . "<" Exp                                (rule 62)
	Exp -> Exp . ">" Exp                                (rule 63)
	Exp -> Exp . "+" Exp                                (rule 64)
	Exp -> Exp . "-" Exp                                (rule 65)
	Exp -> Exp . "*" Exp                                (rule 66)
	Exp -> Exp . "/" Exp                                (rule 67)
	Exp -> Exp . "%" Exp                                (rule 68)
	Exp -> id "(" Exps ")" "[" Exp . "]"                (rule 78)

	"]"            shift, and enter state 158
	"+"            shift, and enter state 90
	"*"            shift, and enter state 91
	"-"            shift, and enter state 92
	"/"            shift, and enter state 93
	"%"            shift, and enter state 94
	"=="           shift, and enter state 95
	"!="           shift, and enter state 96
	"<"            shift, and enter state 97
	">"            shift, and enter state 98
	"&&"           shift, and enter state 99


State 158

	Exp -> id "(" Exps ")" "[" Exp "]" .                (rule 78)

	";"            reduce using rule 78
	","            reduce using rule 78
	")"            reduce using rule 78
	"]"            reduce using rule 78
	"+"            reduce using rule 78
	"*"            reduce using rule 78
	"-"            reduce using rule 78
	"/"            reduce using rule 78
	"%"            reduce using rule 78
	"=="           reduce using rule 78
	"!="           reduce using rule 78
	"<"            reduce using rule 78
	">"            reduce using rule 78
	"&&"           reduce using rule 78


State 159

	Cmd -> id "(" Exps ")" "<" LValues ">" ";" .        (rule 37)

	id             reduce using rule 37
	"read"         reduce using rule 37
	"print"        reduce using rule 37
	"if"           reduce using rule 37
	"else"         reduce using rule 37
	"iterate"      reduce using rule 37
	"{"            reduce using rule 37
	"}"            reduce using rule 37
	"return"       reduce using rule 37


State 160

	LValues -> LValue "," LValueList .                  (rule 48)

	">"            reduce using rule 48


State 161

	LValueList -> LValue . "," LValueList               (rule 51)
	LValueList -> LValue .                              (rule 52)

	","            shift, and enter state 162
	">"            reduce using rule 52


State 162

	LValueList -> LValue "," . LValueList               (rule 51)

	id             shift, and enter state 73

	LValueList     goto state 163
	LValue         goto state 161

State 163

	LValueList -> LValue "," LValueList .               (rule 51)

	">"            reduce using rule 51


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 81
Number of terminals: 43
Number of non-terminals: 24
Number of states: 164
